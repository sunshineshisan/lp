{"version":3,"file":"videoAuto.080a468c.js","sources":["../../src/components/videoAuto.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <div class=\"video-container\" @touchstart=\"onTouchStart\" @touchmove=\"onTouchMove\" @touchend=\"onTouchEnd\">\n      <div v-for=\"(video, index) in visibleVideos\" :key=\"index\" class=\"video-item\">\n        <video ref=\"videoRefs[index]\" :src=\"video.url\" controls autoplay muted></video>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted, watchEffect } from 'vue';\n\n// 模拟视频数据\nconst videos = [\n  { url: 'https://www.lovepartya.com/IMG_0358.MP4', cover: 'https://example.com/cover1.jpg' },\n  { url: 'https://www.lovepartya.com/IMG_6659.MP4', cover: 'https://example.com/cover2.jpg' },\n  { url: 'https://www.lovepartya.com/IMG_3936.MP4', cover: 'https://example.com/cover3.jpg' },\n  // 可以添加更多视频\n];\n\n// 当前视频索引\nconst currentIndex = ref(0);\n// 可见视频列表\nconst visibleVideos = ref([videos[currentIndex.value]]);\n// 视频元素引用数组\nconst videoRefs = ref([]);\n\n// 触摸事件相关变量\nlet startY = 0;\nlet isSwiping = false;\n\nconst onTouchStart = (event) => {\n  startY = event.touches[0].clientY;\n  isSwiping = true;\n};\n\nconst onTouchMove = (event) => {\n  if (!isSwiping) return;\n  const currentY = event.touches[0].clientY;\n  const deltaY = currentY - startY;\n  // 这里可以添加滑动动画效果\n};\n\nconst onTouchEnd = (event) => {\n  if (!isSwiping) return;\n  const currentY = event.changedTouches[0].clientY;\n  const deltaY = currentY - startY;\n  if (deltaY < -50) {\n    // 向上滑动，切换到下一个视频\n    if (currentIndex.value < videos.length - 1) {\n      currentIndex.value++;\n      visibleVideos.value = [videos[currentIndex.value]];\n      preloadNextVideo();\n    }\n  } else if (deltaY > 50) {\n    // 向下滑动，切换到上一个视频\n    if (currentIndex.value > 0) {\n      currentIndex.value--;\n      visibleVideos.value = [videos[currentIndex.value]];\n    }\n  }\n  isSwiping = false;\n};\n\nconst preloadNextVideo = () => {\n  if (currentIndex.value < videos.length - 1) {\n    const nextVideoIndex = currentIndex.value + 1;\n    const nextVideo = new Audio(videos[nextVideoIndex].url);\n    nextVideo.preload = 'auto';\n  }\n};\n\nonMounted(() => {\n  preloadNextVideo();\n  watchEffect(() => {\n    const video = videoRefs.value[currentIndex.value];\n    if (video) {\n      video.load();\n      video.play();\n    }\n  });\n});\n</script>\n\n<style scoped>\n.video-container {\n  width: 100%;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: #000;\n  overflow: hidden;\n}\n\n.video-item {\n  width: 100%;\n  height: 100%;\n}\n\nvideo {\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n}\n</style>\n"],"names":["videos","currentIndex","ref","visibleVideos","videoRefs","startY","isSwiping","onTouchStart","event","onTouchMove","onTouchEnd","deltaY","preloadNextVideo","nextVideoIndex","nextVideo","onMounted","watchEffect","video"],"mappings":"sJAcA,MAAMA,EAAS,CACb,CAAE,IAAK,0CAA2C,MAAO,gCAAkC,EAC3F,CAAE,IAAK,0CAA2C,MAAO,gCAAkC,EAC3F,CAAE,IAAK,0CAA2C,MAAO,gCAAkC,CAE7F,EAGMC,EAAeC,EAAI,CAAC,EAEpBC,EAAgBD,EAAI,CAACF,EAAOC,EAAa,MAAM,CAAC,EAEhDG,EAAYF,EAAI,CAAA,CAAE,EAGxB,IAAIG,EAAS,EACTC,EAAY,GAEhB,MAAMC,EAAgBC,GAAU,CAC9BH,EAASG,EAAM,QAAQ,GAAG,QAC1BF,EAAY,EACd,EAEMG,EAAeD,GAAU,CACzB,CAACF,GACYE,EAAM,QAAQ,GAAG,OAGpC,EAEME,EAAcF,GAAU,CAC5B,GAAI,CAACF,EAAW,OAEhB,MAAMK,EADWH,EAAM,eAAe,GAAG,QACfH,EACtBM,EAAS,IAEPV,EAAa,MAAQD,EAAO,OAAS,IACvCC,EAAa,QACbE,EAAc,MAAQ,CAACH,EAAOC,EAAa,MAAM,EACjDW,KAEOD,EAAS,IAEdV,EAAa,MAAQ,IACvBA,EAAa,QACbE,EAAc,MAAQ,CAACH,EAAOC,EAAa,MAAM,GAGrDK,EAAY,EACd,EAEMM,EAAmB,IAAM,CAC7B,GAAIX,EAAa,MAAQD,EAAO,OAAS,EAAG,CAC1C,MAAMa,EAAiBZ,EAAa,MAAQ,EACtCa,EAAY,IAAI,MAAMd,EAAOa,GAAgB,GAAG,EACtDC,EAAU,QAAU,MACtB,CACF,EAEA,OAAAC,EAAU,IAAM,CACdH,IACAI,EAAY,IAAM,CAChB,MAAMC,EAAQb,EAAU,MAAMH,EAAa,OACvCgB,IACFA,EAAM,KAAI,EACVA,EAAM,KAAI,EAEhB,CAAG,CACH,CAAC"}